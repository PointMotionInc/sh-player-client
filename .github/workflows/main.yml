# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, dev, stage ]
  pull_request:
    branches: [ main, dev, stage ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  ci-cd:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

#       - name: Setup tmate session
#         uses: mxschmitt/action-tmate@v3
#         timeout-minutes: 15

      - name: Set env to production
        if: endsWith(github.ref, '/main')
        run: |
          echo "ENVIRONMENT=production" >> $GITHUB_ENV
          echo "NODE_ENV=production" >> $GITHUB_ENV
          echo "S3_ENV=prod" >> $GITHUB_ENV

      - name: Set env to staging
        if: endsWith(github.ref, '/stage')
        run: |
          echo "ENVIRONMENT=staging" >> $GITHUB_ENV
          echo "NODE_ENV=staging" >> $GITHUB_ENV
          echo "S3_ENV=stage" >> $GITHUB_ENV

      - name: Set env to development
        if: endsWith(github.ref, '/dev')
        run: |
          echo "ENVIRONMENT=development" >> $GITHUB_ENV
          echo "NODE_ENV=development" >> $GITHUB_ENV
          echo "S3_ENV=dev" >> $GITHUB_ENV
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        
      - name: npm install and npm run build
        run: |
          # Print current env
          echo "Env: $(echo $ENVIRONMENT)"

          # Printing current path
          echo "Current path: $(pwd)"

          # Listing files
          ls -la

          npm install -g @angular/cli
          npm ci --ignore-scripts
          npm run build -- -c "$ENVIRONMENT"

      - name: running unit tests
        run: npm run test:chromeheadless

      - uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: patient.$S3_ENV.pointmotioncontrol.com
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'
          SOURCE_DIR: /home/runner/work/sh-player-client/sh-player-client/dist/sh-player-client

  update-coverage-badge:
    runs-on: ubuntu-latest
    needs: ci-cd
    if: github.ref == 'refs/heads/dev'
    steps:
      - uses: actions/checkout@v2

      - name: npm install
        run: npm ci --ignore-scripts --legacy-peer-deps

      - name: running unit tests
        run: npm run test:chromeheadless

      - name: update code coverage badge
        run: npx update-badge

      - uses: mikeal/publish-to-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: ${{ github.ref_name }}
